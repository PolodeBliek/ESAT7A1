import numpy as np
import time
import pickle
from PIL import Image
from sklearn.cluster import DBSCAN

start_time = time.time()

# list of lists
matrix = pickle.load(open("matrix_vr_annelies.pkl", "rb"))
# test matrix, with 5 objects, 19 times 1.
testmatrix = [[1, 0, 0, 0, 1, 1, 0, 1],
              [1, 0, 0, 0, 1, 1, 0, 1],
              [1, 0, 0, 1, 1, 1, 0, 0],
              [0, 0, 0, 0, 0, 1, 0, 1],
              [1, 1, 1, 1, 0, 0, 0, 1]]

# numpy array
matrix = np.array(matrix)
# resize image
# Do not do this with the testmatrix!!
image = Image.fromarray(matrix)
image = image.resize(size=(426, 758))
matrix = np.array(image)

nb_columns = len(matrix[0])
nb_rows = len(matrix)
d = []


# DBSCAN needs a dataset of the coordinates of all the 1's in the matrix
def matrix_to_coordinates():
    for row in range(nb_rows):
        for column in range(nb_columns):
            if matrix[row][column] == 1:
                d.extend(np.array([[row, column]]))


matrix_to_coordinates()
db_default = DBSCAN(eps=1.01, min_samples=2).fit(d)
#print(db_default.labels_)
# +1 because labels start from 0
print("NUMBER OF OBJECTS:", max(db_default.labels_) + 1)
print("--- %s seconds ---" % (time.time() - start_time))
